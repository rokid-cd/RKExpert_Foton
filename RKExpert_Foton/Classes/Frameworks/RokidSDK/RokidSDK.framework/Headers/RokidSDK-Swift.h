#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef ROKIDSDK_SWIFT_H
#define ROKIDSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ARKit;
@import CoreFoundation;
@import Foundation;
@import JCCloudWrapper;
@import JCDoodlePlugin;
@import JCSDKOC;
@import ObjectiveC;
@import QMUIKit;
@import SceneKit;
@import UIKit;
#endif

#import <RokidSDK/RokidSDK.h>

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="RokidSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class UIColor;
@class NSString;
@class NSAttributedString;
@class UIFont;
@class NSCoder;
@class UITouch;
@class UIEvent;

IB_DESIGNABLE
SWIFT_CLASS("_TtC8RokidSDK11ActiveLabel")
@interface ActiveLabel : UILabel
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull mentionColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable mentionSelectedColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull hashtagColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable hashtagSelectedColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nonnull URLColor;
@property (nonatomic, strong) IBInspectable UIColor * _Nullable URLSelectedColor;
@property (nonatomic) IBInspectable CGFloat lineSpacing;
@property (nonatomic) IBInspectable CGFloat minimumLineHeight;
@property (nonatomic, copy) IBInspectable NSString * _Nullable highlightFontName;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, strong) NSAttributedString * _Nullable attributedText;
@property (nonatomic, strong) UIFont * _Null_unspecified font;
@property (nonatomic, strong) UIColor * _Null_unspecified textColor;
@property (nonatomic) NSTextAlignment textAlignment;
@property (nonatomic) NSInteger numberOfLines;
@property (nonatomic) NSLineBreakMode lineBreakMode;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)awakeFromNib;
- (void)drawTextInRect:(CGRect)rect;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesMoved:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end

@class UIGestureRecognizer;

@interface ActiveLabel (SWIFT_EXTENSION(RokidSDK)) <UIGestureRecognizerDelegate>
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
- (BOOL)gestureRecognizer:(UIGestureRecognizer * _Nonnull)gestureRecognizer shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer * _Nonnull)otherGestureRecognizer SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8RokidSDK18CallRoomInviteCell")
@interface CallRoomInviteCell : UICollectionViewCell
- (void)awakeFromNib;
- (void)fillCompleted;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC8RokidSDK20RKBaseViewController")
@interface RKBaseViewController : UIViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK29RKBaseLandscapeViewController")
@interface RKBaseLandscapeViewController : RKBaseViewController
@property (nonatomic, readonly) BOOL shouldAutorotate;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK16CallRoomInviteVC")
@interface CallRoomInviteVC : RKBaseLandscapeViewController
- (void)viewDidLoad;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UICollectionView;
@class NSIndexPath;

@interface CallRoomInviteVC (SWIFT_EXTENSION(RokidSDK)) <UICollectionViewDataSource, UICollectionViewDelegate>
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC8RokidSDK18CallRoomMemberView")
@interface CallRoomMemberView : BaseXibView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK3Dev")
@interface Dev : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class JCClient;
@class RKMeetingInfo;
@class RKContactInfoModel;

SWIFT_CLASS("_TtC8RokidSDK9JCManager")
@interface JCManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) JCManager * _Nonnull shareInstance;)
+ (JCManager * _Nonnull)shareInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)setJCClient:(JCClient * _Nonnull)client;
/// 退出菊风登录
- (void)logout;
- (void)inviteWithMeetingInfo:(RKMeetingInfo * _Nonnull)meetingInfo inviteContacts:(NSArray<RKContactInfoModel *> * _Nonnull)inviteContacts;
- (void)stopMeeting;
@end

@class DoodleAction;

@interface JCManager (SWIFT_EXTENSION(RokidSDK)) <DoodleLayoutDelegate>
- (void)onCloseDoodle;
- (void)onWillCleanDoodle;
- (void)onPauseDoodle;
- (void)onRestartDoodle;
- (void)onDoodleActionGenerated:(DoodleAction * _Null_unspecified)doodleAction;
@end

@class JCMediaDeviceVideoCanvas;

@interface JCManager (SWIFT_EXTENSION(RokidSDK)) <JCMediaDeviceCallback>
- (void)onCameraUpdate;
- (void)onAudioOutputTypeChange:(NSString * _Null_unspecified)audioOutputType;
- (void)onRenderReceived:(JCMediaDeviceVideoCanvas * _Null_unspecified)canvas;
- (void)onRenderStart:(JCMediaDeviceVideoCanvas * _Null_unspecified)canvas;
- (void)onAudioInerruptAndResume:(BOOL)interrupt;
@end

@class JCMessageChannelConversation;
@class JCMessageChannelItem;

@interface JCManager (SWIFT_EXTENSION(RokidSDK)) <JCMessageChannelCallback>
- (void)onRefreshConversation:(int32_t)operationId result:(BOOL)result conversations:(NSArray<JCMessageChannelConversation *> * _Null_unspecified)conversations reason:(JCMessageChannelReason)reason updateTime:(NSInteger)updateTime refreshServerUid:(NSString * _Null_unspecified)refreshServerUid;
- (void)onFetchMessageResult:(int32_t)operationId result:(BOOL)result reason:(JCMessageChannelReason)reason;
- (void)onMarkReadResult:(int32_t)operationId result:(BOOL)result reason:(JCMessageChannelReason)reason;
- (void)onMarkRecvResult:(int32_t)operationId result:(BOOL)result reason:(JCMessageChannelReason)reason;
- (void)onReceiveMarkRecv:(NSString * _Null_unspecified)serverUid serverMessageId:(NSInteger)serverMessageId;
- (void)onReceiveMarkRead:(NSString * _Null_unspecified)serverUid serverMessageId:(NSInteger)serverMessageId;
- (void)onMessageListRecv:(NSArray<JCMessageChannelItem *> * _Null_unspecified)messageList;
- (void)onWithdrawalMessageResult:(int32_t)operationId result:(BOOL)result message:(JCMessageChannelItem * _Null_unspecified)message reason:(JCMessageChannelReason)reason;
- (void)onMessageSendUpdate:(JCMessageChannelItem * _Null_unspecified)message;
- (void)onMessageRecv:(JCMessageChannelItem * _Null_unspecified)message;
@end

@class JCMediaChannelPropChangeParam;
@class JCMediaChannelQueryInfo;
@class JCMediaChannelParticipant;
@class JCMediaChannelParticipantChangeParam;

@interface JCManager (SWIFT_EXTENSION(RokidSDK)) <JCMediaChannelCallback>
- (void)onMediaChannelStateChange:(JCMediaChannelState)state oldState:(JCMediaChannelState)oldState;
- (void)onMediaChannelPropertyChange:(JCMediaChannelPropChangeParam * _Null_unspecified)changeParam;
- (void)onJoin:(BOOL)result reason:(JCMediaChannelReason)reason channelId:(NSString * _Null_unspecified)channelId;
- (void)onLeave:(JCMediaChannelReason)reason channelId:(NSString * _Null_unspecified)channelId;
- (void)onStop:(BOOL)result reason:(JCMediaChannelReason)reason;
- (void)onQuery:(int32_t)operationId result:(BOOL)result reason:(JCMediaChannelReason)reason queryInfo:(JCMediaChannelQueryInfo * _Null_unspecified)queryInfo;
- (void)onParticipantJoin:(JCMediaChannelParticipant * _Null_unspecified)participant;
- (void)onParticipantLeft:(JCMediaChannelParticipant * _Null_unspecified)participant;
/// 成员更新回调
/// @param participant JCMediaChannelParticipant 成员对象
/// @param changeParam JCMediaChannelParticipantChangeParam 更新标识类
- (void)onParticipantUpdate:(JCMediaChannelParticipant * _Null_unspecified)participant participantChangeParam:(JCMediaChannelParticipantChangeParam * _Null_unspecified)participantChangeParam;
- (void)onMessageReceive:(NSString * _Null_unspecified)type content:(NSString * _Null_unspecified)content fromUserId:(NSString * _Null_unspecified)fromUserId;
- (void)onInviteSipUserResult:(int32_t)operationId result:(BOOL)result reason:(int32_t)reason;
- (void)onParticipantVolumeChange:(JCMediaChannelParticipant * _Null_unspecified)participant;
@end


SWIFT_CLASS("_TtC8RokidSDK18JuphoonChatMessage")
@interface JuphoonChatMessage : JCConversationMessageData
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end






SWIFT_CLASS("_TtC8RokidSDK8NotiName")
@interface NotiName : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull rkAuthStateChangedNotification;)
+ (NSString * _Nonnull)rkAuthStateChangedNotification SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull contactMgrDidRefresh;)
+ (NSString * _Nonnull)contactMgrDidRefresh SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull joinMeeting;)
+ (NSString * _Nonnull)joinMeeting SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull inviteUser;)
+ (NSString * _Nonnull)inviteUser SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelOnParticipantJoin;)
+ (NSString * _Nonnull)mediaChannelOnParticipantJoin SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelOnJoinSuccess;)
+ (NSString * _Nonnull)mediaChannelOnJoinSuccess SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull onRoomFullScreen;)
+ (NSString * _Nonnull)onRoomFullScreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull offRoomFullScreen;)
+ (NSString * _Nonnull)offRoomFullScreen SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull mediaChannelStateChange;)
+ (NSString * _Nonnull)mediaChannelStateChange SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull meetingError;)
+ (NSString * _Nonnull)meetingError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull takeSnapshot;)
+ (NSString * _Nonnull)takeSnapshot SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull onRemoteRecord;)
+ (NSString * _Nonnull)onRemoteRecord SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull applicationWillTerminate;)
+ (NSString * _Nonnull)applicationWillTerminate SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull IMGoInviteMemeberVC;)
+ (NSString * _Nonnull)IMGoInviteMemeberVC SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKARImageToolView")
@interface RKARImageToolView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK11RKARMarkMgr")
@interface RKARMarkMgr : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK11RKAlertView")
@interface RKAlertView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK22RKAnswerViewController")
@interface RKAnswerViewController : RKBaseViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class RKMessage;

SWIFT_PROTOCOL("_TtP8RokidSDK17RKMessageProtocol_")
@protocol RKMessageProtocol
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end


@interface RKAnswerViewController (SWIFT_EXTENSION(RokidSDK)) <RKMessageProtocol>
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end



SWIFT_CLASS("_TtC8RokidSDK10RKAudioCfg")
@interface RKAudioCfg : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKAuthInfo")
@interface RKAuthInfo : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nonnull authorization;)
+ (NSString * _Nonnull)authorization SWIFT_WARN_UNUSED_RESULT;
+ (void)setAuthorization:(NSString * _Nonnull)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK31RKBaseMideaDetailViewController")
@interface RKBaseMideaDetailViewController : RKBaseLandscapeViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RKBaseMideaDetailViewController (SWIFT_EXTENSION(RokidSDK)) <RKMessageProtocol>
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end





SWIFT_CLASS("_TtC8RokidSDK26RKBaseNavigationController")
@interface RKBaseNavigationController : UINavigationController
- (void)viewDidLoad;
- (void)pushViewController:(UIViewController * _Nonnull)viewController animated:(BOOL)animated;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKBaseTableView")
@interface RKBaseTableView : UITableView
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8RokidSDK15RKCallAlertView")
@interface RKCallAlertView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK20RKCallViewController")
@interface RKCallViewController : RKBaseLandscapeViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RKCallViewController (SWIFT_EXTENSION(RokidSDK)) <RKMessageProtocol>
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end



@class JCConversationData;

SWIFT_CLASS("_TtC8RokidSDK26RKChatDetailViewController")
@interface RKChatDetailViewController : RKBaseViewController
@property (nonatomic, strong) JCConversationData * _Nonnull conversation;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class UITableViewCell;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDataSource>
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
@end

@class UIScrollView;

@interface RKChatDetailViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDelegate>
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewDidEndDragging:(UIScrollView * _Nonnull)scrollView willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@class RKChatView;

SWIFT_CLASS("_TtC8RokidSDK24RKChatListViewController")
@interface RKChatListViewController : RKBaseViewController
@property (nonatomic, strong) RKChatView * _Nonnull chatView;
@property (nonatomic, strong) RKBaseTableView * _Nonnull tableView;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UITextField;

@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITextFieldDelegate>
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
@end


@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDelegate>
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end


@interface RKChatListViewController (SWIFT_EXTENSION(RokidSDK)) <UITableViewDataSource>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
@end


@class RKChatInfo;
@class RKChatMember;

SWIFT_CLASS("_TtC8RokidSDK13RKChatManager")
@interface RKChatManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RKChatManager * _Nonnull share;)
+ (RKChatManager * _Nonnull)share SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initialize:(NSString * _Nonnull)appKey;
+ (void)saveGroupChatWithServerId:(NSString * _Nonnull)serverId chatInfo:(RKChatInfo * _Nonnull)chatInfo successBlock:(void (^ _Nonnull)(void))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
+ (void)filterMembersWithServerId:(NSString * _Nonnull)serverId members:(NSArray<RKChatMember *> * _Nonnull)members filtered:(void (^ _Nonnull)(NSArray<RKChatMember *> * _Nonnull))filtered;
+ (void)addMemersWithServerId:(NSString * _Nonnull)serverId members:(NSArray<RKChatMember *> * _Nonnull)members resultBlock:(void (^ _Nonnull)(BOOL))resultBlock;
- (void)setStartMeetingStatus;
+ (void)dissolutionGroupWithServerId:(NSString * _Nonnull)serverId successBlock:(void (^ _Nonnull)(void))successBlock failBlock:(void (^ _Nonnull)(NSString * _Nonnull))failBlock;
+ (void)updateConversationsUnread:(void (^ _Nullable)(NSInteger))success;
@end


@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <JCNetCallback>
- (void)onNetChange:(JCNetType)newNetType oldNetType:(JCNetType)oldNetType;
@end

@class RKChatMessage;

@interface RKChatManager (SWIFT_EXTENSION(RokidSDK))
+ (void)sendText:(NSString * _Nonnull)text serverId:(NSString * _Nonnull)serverId msgType:(NSInteger)msgType;
+ (void)sendMessage:(NSArray<RKChatMessage *> * _Nonnull)models;
@end


@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <JCMediaDeviceCallback>
- (void)onCameraUpdate;
- (void)onAudioOutputTypeChange:(NSString * _Null_unspecified)audioOutputType;
- (void)onRenderReceived:(JCMediaDeviceVideoCanvas * _Null_unspecified)canvas;
- (void)onRenderStart:(JCMediaDeviceVideoCanvas * _Null_unspecified)canvas;
- (void)onAudioInerruptAndResume:(BOOL)interrupt;
@end


@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <JCClientCallback>
- (void)onLogout:(JCClientReason)reason;
- (void)onClientStateChange:(JCClientState)state oldState:(JCClientState)oldState;
- (void)onLogin:(BOOL)result reason:(JCClientReason)reason;
- (void)onOnlineMessageReceive:(NSString * _Null_unspecified)userId content:(NSString * _Null_unspecified)content;
- (void)onOnlineMessageSend:(int32_t)operationId result:(BOOL)result;
@end

@class JCAccountItem;
@class JCAccountContact;

@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <JCAccountCallback>
- (void)onQueryUserStatusResult:(int32_t)operationId result:(BOOL)queryResult accountItemList:(NSArray<JCAccountItem *> * _Null_unspecified)accountItemList;
- (void)onQueryServerUidResult:(int32_t)operationId result:(BOOL)queryResult serverUids:(NSDictionary<NSString *, NSString *> * _Null_unspecified)serverUids;
- (void)onQueryUserIdResult:(int32_t)operationId result:(BOOL)queryResult userIds:(NSDictionary<NSString *, NSString *> * _Null_unspecified)userIds;
- (void)onRefreshContacts:(int32_t)operationId result:(BOOL)result contacts:(NSArray<JCAccountContact *> * _Null_unspecified)contacts updateTime:(NSInteger)updateTime fullUpdate:(BOOL)fullUpdate;
- (void)onDealContact:(int32_t)operationId result:(BOOL)result reason:(JCAccountReason)reason;
- (void)onContactsChange:(NSArray<JCAccountContact *> * _Null_unspecified)contacts;
- (void)onSetContactDnd:(int32_t)operationId result:(BOOL)result reason:(JCAccountReason)reason;
@end

@class JCGroupData;
@class JCGroupMemberData;

@interface RKChatManager (SWIFT_EXTENSION(RokidSDK)) <JCCloudManagerDelegate>
- (BOOL)onPreDealFileTransfer:(JCConversationMessageData * _Nonnull)message SWIFT_WARN_UNUSED_RESULT;
- (void)onConversationAdd:(NSInteger)conversationId;
- (void)onConversationUpdate:(NSInteger)conversationId;
- (void)onConversationDelete:(NSInteger)conversationId;
- (void)onConversationMessageAdd:(NSInteger)conversationId message:(JCConversationMessageData * _Nonnull)message;
- (void)onConversationMessageUpdate:(NSInteger)conversationId message:(JCConversationMessageData * _Nonnull)message;
- (void)onConversationMessageDelete:(NSInteger)conversationId message:(JCConversationMessageData * _Nonnull)message;
- (void)onGroupAdd:(JCGroupData * _Nonnull)group;
- (void)onGroupUpdate:(JCGroupData * _Nonnull)group;
- (void)onGroupDelete:(JCGroupData * _Nonnull)group;
- (void)onGroupMemberAdd:(JCGroupMemberData * _Nonnull)member;
- (void)onGroupMemberUpdate:(JCGroupMemberData * _Nonnull)member;
- (void)onGroupMemberDelete:(JCGroupMemberData * _Nonnull)member;
@end


SWIFT_CLASS("_TtC8RokidSDK13RKChatMessage")
@interface RKChatMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK26RKChatRecordViewController")
@interface RKChatRecordViewController : RKChatDetailViewController
- (nonnull instancetype)initWithGroupId:(NSString * _Nonnull)groupId OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKChatView")
@interface RKChatView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK7RKColor")
@interface RKColor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK19RKContactGroupModel")
@interface RKContactGroupModel : NSObject
@property (nonatomic) NSInteger onlineAccountNum;
@property (nonatomic, copy) NSString * _Nonnull groupName;
@property (nonatomic, copy) NSArray<RKContactInfoModel *> * _Nonnull contactsList;
@property (nonatomic) NSInteger totalAccountNum;
@property (nonatomic, copy) NSString * _Nonnull groupId;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 联系人信息
SWIFT_CLASS("_TtC8RokidSDK18RKContactInfoModel")
@interface RKContactInfoModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull username;
@property (nonatomic, copy) NSString * _Nonnull realName;
@property (nonatomic, copy) NSString * _Nonnull licenseCode;
@property (nonatomic, copy) NSString * _Nonnull postName;
@property (nonatomic, copy) NSString * _Nonnull phoneNum;
@property (nonatomic, copy) NSString * _Nonnull companyName;
@property (nonatomic, copy) NSString * _Nonnull headUrl;
@property (nonatomic) JCMediaChannelNetStatus netStatus;
@property (nonatomic, copy) NSString * _Nonnull unitName;
@property (nonatomic) int64_t licenseEndTime;
@property (nonatomic) NSInteger status;
@property (nonatomic) BOOL selected;
@property (nonatomic, readonly) BOOL isSelf;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKContactListModel")
@interface RKContactListModel : NSObject
@property (nonatomic, copy) NSArray<RKContactInfoModel *> * _Nonnull contactsList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK12RKContactMgr")
@interface RKContactMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKContactMgr * _Nonnull shared;)
+ (RKContactMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKContactMgr * _Nonnull)value;
@property (nonatomic, copy) NSDictionary<NSString *, RKContactInfoModel *> * _Nonnull contactFromLicense;
@property (nonatomic, copy) NSDictionary<NSString *, RKContactInfoModel *> * _Nonnull contactFromUserId;
@property (nonatomic, copy) NSDictionary<NSString *, RKContactInfoModel *> * _Nonnull contactfromUserName;
@property (nonatomic, strong) RKContactListModel * _Nonnull contactsListInfo;
- (void)startLoop;
- (void)setupcontactsListInfoData;
- (void)cancel;
- (void)loginWithCompanyId:(NSString * _Nonnull)companyId userName:(NSString * _Nonnull)userName pwd:(NSString * _Nonnull)pwd callback:(void (^ _Nonnull)(BOOL, RKErrorCode, NSString * _Nullable))callback;
- (void)refreshTokenWithCallback:(void (^ _Nonnull)(BOOL, RKErrorCode, NSString * _Nullable))callback;
- (void)getUserInfoWithCallback:(void (^ _Nonnull)(BOOL, RKErrorCode, NSString * _Nullable))callback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKMaskView")
@interface RKMaskView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKCustomActionView")
@interface RKCustomActionView : RKMaskView
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKCustomAlertView")
@interface RKCustomAlertView : RKMaskView
@end


SWIFT_CLASS("_TtC8RokidSDK21RKCustomPropertyModel")
@interface RKCustomPropertyModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKPoint;
enum RKDoodleActionType : NSInteger;

SWIFT_CLASS("_TtC8RokidSDK8RKDoodle")
@interface RKDoodle : NSObject
@property (nonatomic, copy) NSString * _Nonnull doodleId;
@property (nonatomic) NSInteger doodleNo;
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic) NSInteger actionType;
@property (nonatomic, copy) NSString * _Nonnull brushColor;
@property (nonatomic) float brushWidth;
@property (nonatomic, copy) NSArray<RKPoint *> * _Nonnull points;
- (void)addWithPoint:(RKPoint * _Nonnull)point;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithActionType:(enum RKDoodleActionType)actionType brushColor:(UIColor * _Nullable)brushColor brushWidth:(float)brushWidth OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, RKDoodleActionType, closed) {
  RKDoodleActionTypeUnknown = -1,
  RKDoodleActionTypeAdd = 0,
  RKDoodleActionTypeRevoke = 1,
  RKDoodleActionTypeClear = 2,
};


SWIFT_CLASS("_TtC8RokidSDK11RKDoodleMgr")
@interface RKDoodleMgr : NSObject
- (void)stopDoodle;
- (void)sendAllDoodlesTo:(NSString * _Nonnull)license;
- (void)addDoodleActionWithDoodle:(RKDoodle * _Nonnull)doodle;
- (void)sendDoodleActionWithDoodle:(RKDoodle * _Nonnull)doodle;
- (RKDoodle * _Nullable)undoSelfDoodleAction SWIFT_WARN_UNUSED_RESULT;
- (void)undoDoodle:(RKDoodle * _Nonnull)doodle;
- (void)clearAllDoodle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK6RKFont")
@interface RKFont : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK14RKHeartBeatMgr")
@interface RKHeartBeatMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKHeartBeatMgr * _Nonnull shared;)
+ (RKHeartBeatMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKHeartBeatMgr * _Nonnull)value;
- (void)startHeartBeatWithLisence:(NSString * _Null_unspecified)lisence;
- (void)stop;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// 图片缓存 manager
SWIFT_CLASS("_TtC8RokidSDK21RKImageTPCacheManager")
@interface RKImageTPCacheManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;
@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSData;
@class NSURLSessionTask;

/// 大图下载 manager
SWIFT_CLASS("_TtC8RokidSDK24RKImageTPDownloadManager")
@interface RKImageTPDownloadManager : NSObject <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK27RKJoinMeetingViewController")
@interface RKJoinMeetingViewController : RKBaseViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK17RKLandOrientation")
@interface RKLandOrientation : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKLandOrientation * _Nonnull shared;)
+ (RKLandOrientation * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKLandOrientation * _Nonnull)value;
- (void)refreshOritentation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKLineWidthView")
@interface RKLineWidthView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8RokidSDK8RKLogMgr")
@interface RKLogMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RKLogMgr * _Nonnull shared;)
+ (RKLogMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) RKLogLevel logLevel;
@property (nonatomic, copy) NSString * _Nonnull logPath;
- (void)saveSDKLog:(NSString * _Nonnull)text atOnce:(BOOL)atOnce;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKLoginMgr")
@interface RKLoginMgr : NSObject
+ (BOOL)isLogin SWIFT_WARN_UNUSED_RESULT;
+ (void)deInitSDK;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK21RKLoginViewController")
@interface RKLoginViewController : RKBaseViewController
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKLogoutActionView")
@interface RKLogoutActionView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end



SWIFT_CLASS("_TtC8RokidSDK13RKMeetingInfo")
@interface RKMeetingInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull meetingId;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic) int64_t startTime;
@property (nonatomic, copy) NSString * _Nonnull resolutionRatio;
@property (nonatomic, copy) NSString * _Nonnull fromUserId;
@property (nonatomic, copy) NSString * _Nonnull fromUserName;
@property (nonatomic, copy) NSString * _Nonnull serverId;
@property (nonatomic, copy) NSString * _Nonnull oneStreamUserId;
@property (nonatomic, copy) NSString * _Nullable extData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKShareInfo;
@class RKUserDevice;

SWIFT_CLASS("_TtC8RokidSDK13RKMeetingLife")
@interface RKMeetingLife : NSObject
@property (nonatomic) int64_t createTime;
@property (nonatomic) int64_t endTime;
@property (nonatomic, copy) NSString * _Nonnull meetingTitle;
@property (nonatomic, copy) NSString * _Nonnull moderator;
@property (nonatomic, copy) NSString * _Nonnull oneStreamUserId;
@property (nonatomic, copy) NSString * _Nonnull serverId;
@property (nonatomic, copy) NSString * _Nonnull meetingId;
@property (nonatomic, copy) NSString * _Nonnull meetingServerId;
@property (nonatomic, copy) NSString * _Nonnull inviteId;
@property (nonatomic, strong) RKShareInfo * _Nullable shareInfo;
@property (nonatomic, copy) NSArray<RKUserDevice *> * _Nullable userDevices;
@property (nonatomic, copy) NSString * _Nullable extData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKMeetingMaskView")
@interface RKMeetingMaskView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end

@class RKContactInfo;

SWIFT_CLASS("_TtC8RokidSDK12RKMeetingMgr")
@interface RKMeetingMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKMeetingMgr * _Nonnull shared;)
+ (RKMeetingMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKMeetingMgr * _Nonnull)value;
@property (nonatomic) BOOL backCamera;
@property (nonatomic, readonly) BOOL currentBackCamera;
@property (nonatomic) BOOL cameraSwitch;
@property (nonatomic) BOOL audioSwitch;
@property (nonatomic) BOOL trumpetSwitch;
@property (nonatomic) BOOL muteAll;
@property (nonatomic) BOOL switchCamera;
@property (nonatomic, copy) NSString * _Nonnull maxResolution;
@property (nonatomic, copy) NSString * _Nonnull videoUrl;
@property (nonatomic) NSInteger shareDefaultColor;
@property (nonatomic) float shareDefaultLineWidth;
@property (nonatomic) float shareDefaultDotSize;
@property (nonatomic, strong) RKMeetingInfo * _Nullable meetingInfo;
@property (nonatomic, strong) RKMeetingLife * _Nullable meetingLife;
@property (nonatomic) NSInteger joinType;
@property (nonatomic, copy) NSArray<RKContactInfoModel *> * _Nonnull meetingContacts;
- (RKContactInfoModel * _Nullable)meetingContactsFromLicense:(NSString * _Nonnull)license SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSArray<RKUserDevice *> * _Nonnull userDevices;
- (void)addMeetingMembers:(NSArray<NSString *> * _Nonnull)licenses;
- (void)removeMeetingMember:(NSString * _Nonnull)license;
- (void)addMeetingContacts:(NSArray<RKContactInfoModel *> * _Nonnull)meetingContacts;
- (void)addUserDevices:(NSArray<RKUserDevice *> * _Nonnull)userDevices;
- (NSArray<RKContactInfo *> * _Nonnull)transformContactInfo:(NSArray<RKContactInfoModel *> * _Nonnull)contactInfos SWIFT_WARN_UNUSED_RESULT;
- (NSArray<RKContactInfoModel *> * _Nonnull)transformContactInfoModel:(NSArray<RKContactInfo *> * _Nonnull)contactInfos SWIFT_WARN_UNUSED_RESULT;
- (RKMeetingLife * _Nullable)meetingLifeFrom:(NSString * _Nonnull)json SWIFT_WARN_UNUSED_RESULT;
- (void)clearMeeting;
- (void)resetCache;
- (void)createMeetingWithMeetingName:(NSString * _Nonnull)meetingName onSuccess:(RKOnSuccess _Nonnull)onSuccess onFailed:(RKOnFailed _Nonnull)onFailed;
- (void)getMeetingInfoWithMeetingId:(NSString * _Nonnull)meetingId callback:(void (^ _Nonnull)(RKMeetingInfo * _Nullable))callback;
- (void)getRemoteRecordFile;
- (void)addMeetingUsersWithMeetingId:(NSString * _Nullable)meetingId userIdList:(NSArray<NSString *> * _Nullable)userIdList sessionStatus:(NSInteger)sessionStatus;
- (void)onMessageReceived:(RKMessage * _Nonnull)fromMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK9RKMessage")
@interface RKMessage : NSObject
@property (nonatomic, copy) NSString * _Nonnull fromLicense;
@property (nonatomic, copy) NSString * _Nonnull msgType;
@property (nonatomic, copy) NSString * _Nonnull msgBody;
/// <h3>以下msgType 对应 msgBody消息体规则：</h3>
/// | Doodle                 | 传递jcDoodle.stringFromDoodleAction转换的字符串
/// | DoodleResponse | 传递涂鸦发起方保存下来的每一笔涂鸦数据
/// | Slam                    | SlamBaseMessage ar标注的对象类型
/// | Call                      | MeetingLife 会议详细信息对象，用于同步各端的会议信息状态
/// | Share                   | ShareInfo 每次共享状态改变后发送最新状态通知各端
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKMessageCenter")
@interface RKMessageCenter : NSObject
+ (void)registMessageProtocol:(id <RKMessageProtocol> _Nonnull)messageProtocol;
+ (void)unRegistMessageProtocol:(id <RKMessageProtocol> _Nonnull)messageProtocol;
/// 单成员发送消息
/// \param message 消息对象
///
/// \param toUserId 对方的userId
///
+ (void)sendMessage:(RKMessage * _Nonnull)message toUserId:(NSString * _Nonnull)toUserId;
/// 单成员发送消息
/// \param message 消息对象
///
/// \param toLicense 对方的license
///
+ (void)sendMessage:(RKMessage * _Nonnull)message toLicense:(NSString * _Nonnull)toLicense;
/// 单成员发送消息
/// \param message 消息对象
///
/// \param toLicense 对方的license
///
+ (void)sendMessage:(RKMessage * _Nonnull)message toLicense:(NSString * _Nonnull)toLicense toUserId:(NSString * _Nonnull)toUserId;
/// 多成员发送消息
/// \param message 消息对象
///
/// \param toLicenses & toLicenses 传空代表发给会议内所有成员
///
+ (void)sendMessage:(RKMessage * _Nonnull)message :(NSArray<NSString *> * _Nullable)toLicenses :(NSArray<NSString *> * _Nullable)toUserIds;
+ (void)sendPushMessage:(RKMessage * _Nonnull)message :(NSArray<NSString *> * _Nullable)toUserIds;
+ (void)onMessageReceived:(NSString * _Nonnull)userId :(NSString * _Nonnull)msgString;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK27RKMideaDoodleViewController")
@interface RKMideaDoodleViewController : RKBaseMideaDetailViewController
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





@interface RKMideaDoodleViewController (SWIFT_EXTENSION(RokidSDK)) <DrawViewDelegate>
- (void)touchPointAction:(RKDoodle * _Null_unspecified)pointAction;
- (void)addWireDoodleAction:(RKDoodle * _Nonnull)doodle;
@end


SWIFT_CLASS("_TtC8RokidSDK30RKMideaModeratorViewController")
@interface RKMideaModeratorViewController : RKBaseLandscapeViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class QMUIAlbumViewController;
@class QMUIImagePickerViewController;

@interface RKMideaModeratorViewController (SWIFT_EXTENSION(RokidSDK)) <QMUIAlbumViewControllerDelegate>
- (QMUIImagePickerViewController * _Nonnull)imagePickerViewControllerForAlbumViewController:(QMUIAlbumViewController * _Nonnull)albumViewController SWIFT_WARN_UNUSED_RESULT;
@end








@interface RKMideaModeratorViewController (SWIFT_EXTENSION(RokidSDK)) <RKMessageProtocol>
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end

@class UIImagePickerController;

@interface RKMideaModeratorViewController (SWIFT_EXTENSION(RokidSDK)) <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
- (void)imagePickerController:(UIImagePickerController * _Nonnull)picker didFinishPickingMediaWithInfo:(NSDictionary<UIImagePickerControllerInfoKey, id> * _Nonnull)info;
- (void)imagePickerControllerDidCancel:(UIImagePickerController * _Nonnull)picker;
@end

@class QMUIImagePickerPreviewViewController;
@class NSMutableArray;

@interface RKMideaModeratorViewController (SWIFT_EXTENSION(RokidSDK)) <QMUIImagePickerViewControllerDelegate>
- (QMUIImagePickerPreviewViewController * _Nonnull)imagePickerPreviewViewControllerForImagePickerViewController:(QMUIImagePickerViewController * _Nonnull)imagePickerViewController SWIFT_WARN_UNUSED_RESULT;
- (QMUIAlbumSortType)albumSortTypeForImagePickerViewController:(QMUIImagePickerViewController * _Nonnull)imagePickerViewController SWIFT_WARN_UNUSED_RESULT;
- (void)imagePickerViewController:(QMUIImagePickerViewController * _Nonnull)imagePickerViewController didFinishPickingImageWithImagesAssetArray:(NSMutableArray * _Nonnull)imagesAssetArray;
- (void)albumViewControllerDidCancel:(QMUIAlbumViewController * _Nonnull)albumViewController;
@end







SWIFT_CLASS("_TtC8RokidSDK31RKMideaPointVideoViewController")
@interface RKMideaPointVideoViewController : RKBaseMideaDetailViewController
- (void)viewDidLoad;
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end





@interface RKMideaPointVideoViewController (SWIFT_EXTENSION(RokidSDK)) <DrawViewDelegate>
- (void)touchPointAction:(RKDoodle * _Null_unspecified)point;
- (void)addWireDoodleAction:(RKDoodle * _Null_unspecified)doodle;
@end


SWIFT_CLASS("_TtC8RokidSDK25RKMideaRoomViewController")
@interface RKMideaRoomViewController : RKBaseLandscapeViewController
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end






@interface RKMideaRoomViewController (SWIFT_EXTENSION(RokidSDK)) <RKMessageProtocol>
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
@end




SWIFT_CLASS("_TtC8RokidSDK25RKMideaSlamViewController") SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface RKMideaSlamViewController : RKBaseMideaDetailViewController
- (void)viewWillAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidLoad;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface RKMideaSlamViewController (SWIFT_EXTENSION(RokidSDK)) <DrawViewDelegate>
- (void)touchPointAction:(RKDoodle * _Null_unspecified)pointAction;
- (void)addWireDoodleAction:(RKDoodle * _Nonnull)doodle;
@end


@class ARSession;
@class ARCamera;

SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface RKMideaSlamViewController (SWIFT_EXTENSION(RokidSDK)) <ARSCNViewDelegate>
- (void)session:(ARSession * _Nonnull)session cameraDidChangeTrackingState:(ARCamera * _Nonnull)camera;
- (void)session:(ARSession * _Nonnull)session didFailWithError:(NSError * _Nonnull)error;
- (void)sessionWasInterrupted:(ARSession * _Nonnull)session;
- (void)sessionInterruptionEnded:(ARSession * _Nonnull)session;
- (BOOL)sessionShouldAttemptRelocalization:(ARSession * _Nonnull)session SWIFT_WARN_UNUSED_RESULT;
@end

@class ARFrame;
@class ARAnchor;

SWIFT_AVAILABILITY(ios,introduced=11.0)
@interface RKMideaSlamViewController (SWIFT_EXTENSION(RokidSDK)) <ARSessionDelegate>
- (void)session:(ARSession * _Nonnull)session didUpdateFrame:(ARFrame * _Nonnull)frame;
/// 当一个新被添加到当前session时node
- (void)session:(ARSession * _Nonnull)session didAddAnchors:(NSArray<ARAnchor *> * _Nonnull)anchors;
/// 当node更新时
- (void)session:(ARSession * _Nonnull)session didUpdateAnchors:(NSArray<ARAnchor *> * _Nonnull)anchors;
/// 当node被移除时
- (void)session:(ARSession * _Nonnull)session didRemoveAnchors:(NSArray<ARAnchor *> * _Nonnull)anchors;
@end


SWIFT_CLASS("_TtC8RokidSDK31RKMideaVideoContrViewController")
@interface RKMideaVideoContrViewController : RKBaseMideaDetailViewController
- (void)onMessageReceived:(RKMessage * _Nonnull)message;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RKMideaVideoContrViewController (SWIFT_EXTENSION(RokidSDK)) <DrawViewDelegate>
- (void)touchPointAction:(RKDoodle * _Null_unspecified)point;
- (void)addWireDoodleAction:(RKDoodle * _Null_unspecified)doodle;
@end


SWIFT_CLASS("_TtC8RokidSDK16RKPendingMeeting")
@interface RKPendingMeeting : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK12RKPhotoModel")
@interface RKPhotoModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC8RokidSDK7RKPoint")
@interface RKPoint : NSObject
@property (nonatomic) float x;
@property (nonatomic) float y;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKPointVideoMgr")
@interface RKPointVideoMgr : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK18RKRefreshComponent")
@interface RKRefreshComponent : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
- (void)drawRect:(CGRect)rect;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


/// 负责Footer基本配置
SWIFT_CLASS("_TtC8RokidSDK19RKRefreshBaseFooter")
@interface RKRefreshBaseFooter : RKRefreshComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)willMoveToSuperview:(UIView * _Nullable)newSuperview;
@property (nonatomic, getter=isHidden) BOOL hidden;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC8RokidSDK24RKRefreshAutoStateFooter")
@interface RKRefreshAutoStateFooter : RKRefreshBaseFooter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK22RKRefreshAutoGifFooter")
@interface RKRefreshAutoGifFooter : RKRefreshAutoStateFooter
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end






/// 负责Header基本配置
SWIFT_CLASS("_TtC8RokidSDK19RKRefreshBaseHeader")
@interface RKRefreshBaseHeader : RKRefreshComponent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC8RokidSDK18RKRefreshGifHeader")
@interface RKRefreshGifHeader : RKRefreshBaseHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK20RKRefreshStateHeader")
@interface RKRefreshStateHeader : RKRefreshBaseHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK21RKRefreshNormalHeader")
@interface RKRefreshNormalHeader : RKRefreshStateHeader
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



@class RKFileInfo;

SWIFT_CLASS("_TtC8RokidSDK15RKRemoteFileMgr")
@interface RKRemoteFileMgr : NSObject
+ (void)getFileUrlWithBucketName:(NSString * _Null_unspecified)bucketName fileNames:(NSArray<NSString *> * _Null_unspecified)fileNames callback:(void (^ _Nullable)(NSArray<RKFileInfo *> * _Nonnull))callback;
+ (void)saveMeetingVideoUrlWithMeetingId:(NSString * _Nonnull)meetingId bucketName:(NSString * _Nonnull)bucketName fileName:(NSString * _Nonnull)fileName;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK15RKRoomFloatView")
@interface RKRoomFloatView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end

@class UIWindow;

SWIFT_CLASS("_TtC8RokidSDK9RKRoomMgr")
@interface RKRoomMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RKRoomMgr * _Nonnull shared;)
+ (RKRoomMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) UIWindow * _Nonnull rkSDKWindow;
@property (nonatomic, strong) UIWindow * _Nullable oldWindow;
@property (nonatomic, strong) RKRoomFloatView * _Nonnull floatingView;
- (void)joinMeetingWithMeetingInfo:(RKMeetingInfo * _Nonnull)meetingInfo;
- (void)startMeetingWithInfos:(NSArray<RKContactInfoModel *> * _Nonnull)infos meetingInfo:(RKMeetingInfo * _Nonnull)meetingInfo;
- (void)inviteUsersWithInfos:(NSArray<RKContactInfoModel *> * _Nonnull)infos;
- (void)answerCall;
- (void)cancelAnswerCall;
- (void)createRKSDKWindowWithVc:(UIViewController * _Nonnull)vc;
- (void)showRKSDKWindow;
- (void)hiddenRKSDKWindow;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class RKSDKInfo;

SWIFT_CLASS("_TtC8RokidSDK12RKSDKSetting")
@interface RKSDKSetting : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKSDKSetting * _Nonnull shareInstance;)
+ (RKSDKSetting * _Nonnull)shareInstance SWIFT_WARN_UNUSED_RESULT;
+ (void)setShareInstance:(RKSDKSetting * _Nonnull)value;
/// 标品正式 服务器地址
@property (nonatomic, copy) NSString * _Nonnull apiHost;
/// 标品正式 appKey
@property (nonatomic, copy) NSString * _Nonnull appKey;
/// 会议模式
@property (nonatomic) RKMeetingMode mod;
/// 日志控制
@property (nonatomic) RKLogLevel logLevel;
/// SDK需要的基本信息
@property (nonatomic, strong) RKSDKInfo * _Nullable sdkInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK16RKScreenShareMgr")
@interface RKScreenShareMgr : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) RKScreenShareMgr * _Nonnull shared;)
+ (RKScreenShareMgr * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) NSString * _Nonnull shareExtenId;
@property (nonatomic) BOOL screenShare;
- (void)stopScreenShare;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK11RKShareInfo")
@interface RKShareInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKSlamBaseMessage")
@interface RKSlamBaseMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK7RKToast")
@interface RKToast : RKMaskView
@end

@class RKUserInfo;

SWIFT_CLASS("_TtC8RokidSDK12RKUserCenter")
@interface RKUserCenter : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) RKUserCenter * _Nonnull shared;)
+ (RKUserCenter * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (void)setShared:(RKUserCenter * _Nonnull)value;
/// 用户角色 1:技师，2:专家  默认专家
@property (nonatomic) NSInteger userRole;
@property (nonatomic, strong) RKUserInfo * _Nonnull userInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK12RKUserDevice")
@interface RKUserDevice : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKUserInfo")
@interface RKUserInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull userId;
@property (nonatomic, copy) NSString * _Nonnull license;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK16RKUserQRCodeView")
@interface RKUserQRCodeView : RKMaskView
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC8RokidSDK10RKVideoCfg")
@interface RKVideoCfg : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKVideoContrllMgr")
@interface RKVideoContrllMgr : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK17RKVideoCtrMessage")
@interface RKVideoCtrMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8RokidSDK14RKVideoMessage")
@interface RKVideoMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC8RokidSDK11SCNTextNode")
@interface SCNTextNode : SCNNode
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC8RokidSDK2UI")
@interface UI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end









@interface UIColor (SWIFT_EXTENSION(RokidSDK))
/// 将十六进制颜色转换为UIColor
- (nonnull instancetype)initWithHexColor:(NSString * _Nonnull)hexColor alpha:(CGFloat)alpha;
@property (nonatomic, readonly, copy) NSString * _Nonnull hexString;
@end


@interface UIDevice (SWIFT_EXTENSION(RokidSDK))
+ (void)rkDeviceNewOrientation:(UIInterfaceOrientationMask)interfaceOrientation;
@end

















#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
